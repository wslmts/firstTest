<!DOCTYPE html>
<html>
<head>
    <title>Combination Inheritance Example</title>
    <script type="text/javascript">
                    
        function SuperType(name){
            this.name = name;
            this.colors = ["red", "blue", "green"];
        }
        
        SuperType.prototype.sayName = function(){
            alert('SuperType prototype '+this.name);
        };

        function SubType(name, age){  
            SuperType.call(this, name);
            
            this.age = age;
        }

        SubType.prototype = new SuperType('super');
        
        SubType.prototype.sayAge = function(){
            alert(this.age);
        };
        //父构造函数调用2次，同一属性，会同时存在于原型和实例上
        var instance1 = new SubType("kid", 29);
        instance1.sayName();
        delete  instance1.name;
        instance1.sayName();
       /* instance1.colors.push("black");
        alert(instance1.colors);  //"red,blue,green,black"
        instance1.sayName();      //"Nicholas";
        instance1.sayAge();       //29
        
       
        var instance2 = new SubType("Greg", 27);
        alert(instance2.colors);  //"red,blue,green"
        instance2.sayName();      //"Greg";
        instance2.sayAge();       //27*/
       
        
    </script>
</head>
<body>

</body>
</html>